# ============================================================
# ================ CONFIGURAÇÕES COMUNS ======================
# ============================================================

# Porta da aplicação
server.port=8080

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=validate

# Datasource pool e driver
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.maximum-pool-size=5

# JWT
jwt.secret=${JWT_SECRET:defaultSecret}
jwt.expiration=${JWT_EXPIRATION:86400}

# MongoDB (padrão de URI, host/creds variam por perfil)
spring.data.mongodb.auto-index-creation=true

# Redis (host/creds variam por perfil)
spring.data.redis.timeout=10000
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# Logs detalhados para Redis
logging.level.org.springframework.data.redis=DEBUG
logging.level.io.lettuce=DEBUG

# Flyway: usa variável de ambiente se definida, senão cai no datasource
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.url=${SPRING_FLYWAY_URL:${spring.datasource.url}}
spring.flyway.user=${SPRING_FLYWAY_USER:${spring.datasource.username}}
spring.flyway.password=${SPRING_FLYWAY_PASSWORD:${spring.datasource.password}}
spring.flyway.connect-retries=15
spring.flyway.init-sql=SELECT 1
spring.flyway.baseline-version=1
spring.flyway.validate-on-migrate=true

# ============================================================
# ================ PERFIL DOCKER =============================
# ============================================================
spring.config.activate.on-profile=docker

# Fonte de dados PostgreSQL via Docker
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres_db:5432/elearning_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:elearning}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:securepass123}

# MongoDB via Docker
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI:mongodb://root:mongopass123@mongo_db:27017/elearning?authSource=admin&authMechanism=SCRAM-SHA-256}
spring.data.mongodb.database=elearning

# Redis via Docker com variáveis de ambiente
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:redis_server}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}
spring.data.redis.password=${SPRING_DATA_REDIS_PASSWORD:redispass123}

# ============================================================
# ================ PERFIL LOCAL ==============================
# ============================================================
spring.config.activate.on-profile=local

# Fonte de dados PostgreSQL local (sem SSL)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/elearning_db?sslmode=disable}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:elearning}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:securepass123}

# MongoDB local
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI:mongodb://root:mongopass123@localhost:27017/elearning?authSource=admin}
spring.data.mongodb.database=elearning

# Redis local
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}
spring.data.redis.password=${SPRING_DATA_REDIS_PASSWORD:redispass123}